/*Input the reservation ID and change reservation room type if there is availability for 
the new room type during the reservationâ€™s date interval.*/

create or replace function avalibilitycheck
 (p_r_type in varchar, p_start in date, p_end in date, resID number)
 /*inputs room type that wants to be changed and the specific reservation date*/
 
	return number IS
	availibilityCount number;
BEGIN
	select count(r_id)into availibilityCount
	/*selects the # of rooms that fit the room type and have no reservations associated with it during the inputted reservation dates */
	from room
 /*chose right outer join because it returns all rooms whether they have a reservation associated or not*/
	where r_type = p_r_type
        	AND room.hotel_id = (select hotel_id from reservation where res_id = resID)
        	AND  r_id IN 
            (select r_id from roomRes 
                where p_end < res_start
                or p_start > res_end
                or roomRes.res_start is null) ;
		return availibilityCount;
EXCEPTION
    when no_data_found then 
        return -1;
    END;

/* selects room id that has no current reservations and exists in the same hotel*/



CREATE OR REPLACE PROCEDURE changeRoomType (p_ResID in number, p_r_type IN varchar, n_res_price number)
 /* p_ResID used to update room type according to the input. rest of parameters same as function.*/
IS
      	 roomAvail number;
       	 p_start date;
       	 p_end date;
       	 hotel number;
	zeroCount exception;
BEGIN	
        select res_start_date, res_end_date, hotel_id into p_start, p_end, hotel
        from reservation where res_id = p_ResID;
        
roomAvail := avalibilitycheck(p_r_type, p_start, p_end, p_ResID); 

/*calls function avalibilityCheck*/

  /* if statement: indicates that there are rooms available during the given time frame and room type. If the room is available; roomtype and room id are updated.*/

		IF roomAvail > 0 THEN 
			update roomRes
			set roomtype = p_r_type
			where roomRes.res_id = p_resID;
		 
			update roomRes
			set r_id = 
(select r_id from room where r_type = p_r_type and
		room.hotel_id = (select hotel_id from reservation where res_id = p_ResID ))
	 		where roomRes.res_id = p_resID;

 /*subquery finds a room that is available during the time slot that matches the room type requested*/
               
                
           			 update roomRes
              		 set total_price_of_room_res = n_res_price
                			where roomRes.res_id = p_resID;

                
		elsif roomAvail <= 0 THEN 
			raise zerocount; 
/*if no rooms are counted, then an exception is raised by the procedure. */

	END IF;
	EXCEPTION
		When zerocount then dbms_output.put_line('No rooms available of room type ' || p_r_type || ' in Hotel ' || hotel); /*if no rooms are available, the statement prior is outputted. */
END;


 
 

